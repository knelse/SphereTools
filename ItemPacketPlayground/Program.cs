
Console.WindowWidth = 300;

var fromCode = true;

if (fromCode)
{
    // ma missing
    var container = Convert.FromHexString(
        "5CAFE48B0F30153009C055021900CCD018409145A69CA44B010654CD000A5900F0FFFFFF5FF080805FD72BB8E313AE4B3372006F3C7608D0359E576491F9B0400518503503286401C0FFFFFFFFCFEB95CAF0012ED8250124CF2203006B190328B2C800508001553380C20404145E618CEE6B2E6CEC6B8E06E0F7F54ABEF80053FB9280D6B19301C0A28E811553642A48BA146040D50CA0900500FFFFFFFF050F08F881BD52193E00B5BC2480F6566400E0206300451619000A30A06A065098800060AF5446E115C6E8BEE6C2C6BEE660007E61AFD88B0F208E2F0900C8091900B4C418409145A61003176040D50CA0900500FFFFFFFF3FB1572AC3075082970440038D0C00AC5D0CA0C8220340010654CD000A131050788531BAAFB9B0B1AFB91A80DFD82B9CE103B8DB4B022011420600C331C651649101A00003AA6600850908F891BDE22E3E94C9ECE3212AEA64C03DFB6300851599DE8B300518503503286401C0FFFFFFFFAFEC157AF1016DDA2501FAEE22030007150328A8C8AC8B8401");


    var items = BitStreamTools.GetItemsFromPacket(container, true);

    foreach (var item in items)
    {
        Console.WriteLine(item.ToDebugString());
    }
}

else
{
    while (true)
    {
        var container = Convert.FromHexString(Console.ReadLine());
        var items = BitStreamTools.GetItemsFromPacket(container, true);

        foreach (var item in items)
        {
            Console.WriteLine(item.ToDebugString());
        }
    }
}

